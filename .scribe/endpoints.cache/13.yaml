## Autogenerated by Scribe. DO NOT MODIFY.

name: Pictures
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/pictures/{id}'
    metadata:
      title: 'Get picture'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The picture''s ID.'
        required: true
        example: 298
        type: integer
        custom: []
    queryParameters:
      embed:
        name: embed
        description: 'The list of the picture relationships separated by comma for Eager Loading.'
        required: false
        example: 'null'
        type: string
        custom: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"id":298,"post_id":91,"filename":"files\/us\/91\/f7e71af1ea921ea04ffe31ef53193bea.jpg","mime_type":"image\/jpeg","position":3,"active":1,"url":{"full":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/91\/thumb-816x460-f7e71af1ea921ea04ffe31ef53193bea.jpg","small":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/91\/thumb-120x90-f7e71af1ea921ea04ffe31ef53193bea.jpg","medium":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/91\/thumb-320x240-f7e71af1ea921ea04ffe31ef53193bea.jpg","big":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/91\/thumb-816x460-f7e71af1ea921ea04ffe31ef53193bea.jpg"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/pictures
    metadata:
      title: 'Store picture'
      description: 'Note: This endpoint is only available for the multi steps post edition.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters: []
    queryParameters: []
    bodyParameters:
      country_code:
        name: country_code
        description: 'The code of the user''s country.'
        required: true
        example: US
        type: string
        custom: []
      count_packages:
        name: count_packages
        description: 'The number of available packages.'
        required: true
        example: 3
        type: integer
        custom: []
      count_payment_methods:
        name: count_payment_methods
        description: 'The number of available payment methods.'
        required: true
        example: 1
        type: integer
        custom: []
      post_id:
        name: post_id
        description: 'The post''s ID.'
        required: true
        example: 2
        type: integer
        custom: []
      pictures:
        name: pictures
        description: 'The files to upload.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/pictures/{id}'
    metadata:
      title: 'Delete picture'
      description: |-
        Note: This endpoint is only available for the multi steps post edition.
        For newly created listings, the post's ID need to be added in the request input with the key 'new_post_id'.
        The 'new_post_id' and 'new_post_tmp_token' fields need to be removed or unset during the post edition steps.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      id:
        name: id
        description: 'The ID of the picture.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: 'The post''s ID.'
        required: true
        example: 2
        type: integer
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/pictures/reorder
    metadata:
      title: 'Reorder pictures'
      description: 'Note: This endpoint is only available for the multi steps post edition.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
      X-Action: bulk
    urlParameters: []
    queryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: 'The post''s ID.'
        required: true
        example: 2
        type: integer
        custom: []
      body:
        name: body
        description: 'Encoded json of the new pictures'' positions array [[''id'' => 2, ''position'' => 1], [''id'' => 1, ''position'' => 2], ...]'
        required: true
        example: ut
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{postId}/pictures'
    metadata:
      title: 'List pictures'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Content-Language: en
      X-AppApiToken: Uk1DSFlVUVhIRXpHbWt6d2pIZjlPTG15akRPN2tJTUs=
      X-AppType: docs
    urlParameters:
      postId:
        name: postId
        description: ''
        required: true
        example: 2
        type: integer
        custom: []
    queryParameters:
      embed:
        name: embed
        description: 'The list of the picture relationships separated by comma for Eager Loading. Possible values: post.'
        required: false
        example: 'null'
        type: string
        custom: []
      postId:
        name: postId
        description: 'List of pictures related to a post (using the post ID).'
        required: false
        example: 1
        type: integer
        custom: []
      latest:
        name: latest
        description: 'Get only the first picture after ordering (as object instead of collection).'
        required: false
        example: false
        type: boolean
        custom: []
      sort:
        name: sort
        description: 'The sorting parameter (Order by DESC with the given column. Use "-" as prefix to order by ASC). Possible values: position, created_at.'
        required: false
        example: '-position'
        type: string
        custom: []
      perPage:
        name: perPage
        description: 'Items per page. Can be defined globally from the admin settings. Cannot be exceeded 100.'
        required: false
        example: 2
        type: integer
        custom: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":null,"result":{"data":[{"id":3,"post_id":1,"filename":"files\/us\/1\/8f202ea950c8f5df92d67eed44fdebf2.jpg","mime_type":"image\/jpeg","position":2,"active":1,"url":{"full":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/1\/thumb-816x460-8f202ea950c8f5df92d67eed44fdebf2.jpg","small":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/1\/thumb-120x90-8f202ea950c8f5df92d67eed44fdebf2.jpg","medium":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/1\/thumb-320x240-8f202ea950c8f5df92d67eed44fdebf2.jpg","big":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/1\/thumb-816x460-8f202ea950c8f5df92d67eed44fdebf2.jpg"}},{"id":1,"post_id":1,"filename":"files\/us\/1\/fb32b5a55e210cfa053e8171cea5b377.jpg","mime_type":"image\/jpeg","position":3,"active":1,"url":{"full":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/1\/thumb-816x460-fb32b5a55e210cfa053e8171cea5b377.jpg","small":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/1\/thumb-120x90-fb32b5a55e210cfa053e8171cea5b377.jpg","medium":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/1\/thumb-320x240-fb32b5a55e210cfa053e8171cea5b377.jpg","big":"https:\/\/demo.laraclassifier.local\/storage\/files\/us\/1\/thumb-816x460-fb32b5a55e210cfa053e8171cea5b377.jpg"}}],"links":{"first":"https:\/\/demo.laraclassifier.local\/api\/posts\/2\/pictures?page=1","last":"https:\/\/demo.laraclassifier.local\/api\/posts\/2\/pictures?page=3","prev":null,"next":"https:\/\/demo.laraclassifier.local\/api\/posts\/2\/pictures?page=2"},"meta":{"current_page":1,"from":1,"last_page":3,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"https:\/\/demo.laraclassifier.local\/api\/posts\/2\/pictures?page=1","label":"1","active":true},{"url":"https:\/\/demo.laraclassifier.local\/api\/posts\/2\/pictures?page=2","label":"2","active":false},{"url":"https:\/\/demo.laraclassifier.local\/api\/posts\/2\/pictures?page=3","label":"3","active":false},{"url":"https:\/\/demo.laraclassifier.local\/api\/posts\/2\/pictures?page=2","label":"Next &raquo;","active":false}],"path":"https:\/\/demo.laraclassifier.local\/api\/posts\/2\/pictures","per_page":2,"to":2,"total":5}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
